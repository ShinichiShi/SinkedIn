rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can be read by anyone (for profile viewing), but only written by authenticated users
    match /users/{userId} {
      allow read: if true; // Anyone can read user profiles
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Posts can be read by anyone, but only created/updated by authenticated users
    match /posts/{postId} {
      allow read: if true; // Anyone can read posts
      allow create, update: if request.auth != null;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Comments can be read by anyone, but only created by authenticated users
    match /comments/{commentId} {
      allow read: if true; // Anyone can read comments
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }
    
    // Notifications can only be read/updated by the user they belong to, but can be created by anyone
    match /notifications/{notificationId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.targetUserId;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == resource.data.targetUserId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.targetUserId;
    }
    
    // Likes collection - users can create/delete their own likes
    match /likes/{likeId} {
      allow read: if true; // Anyone can read likes to check if post is liked
      allow create: if request.auth != null;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Follows collection - users can create/delete their own follows
    match /follows/{followId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow delete: if request.auth != null && request.auth.uid == resource.data.followerId;
    }
    
    // Shares collection - users can create their own shares
    match /shares/{shareId} {
      allow read: if true; // Anyone can read shares to get share count
      allow create: if request.auth != null;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
